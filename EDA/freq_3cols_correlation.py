import pickle
import sys
import numpy as np # linear algebra
import pandas as pd
from itertools import combinations
from scipy.special import comb

import logging

logger = logging.getLogger('3cols')
logger.setLevel(logging.INFO)
# create file handler which logs even debug messages
fh = logging.FileHandler('../logs/freq3cols.log')
fh.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
fh.setFormatter(formatter)
# add the handlers to logger
logger.addHandler(fh)

# 'application' code
logger.info('info message')

thismodule = sys.modules[__name__]


train = pd.read_pickle('../input/train-encoded-allcols.pkl')
target = pd.read_pickle('../input/target.pkl')

train['HasDetections'] = target

cols_high_corr = ['EngineVersion',
 'AppVersion',
 'AvSigVersion',
 'RtpStateBitfield',
 'AVProductStatesIdentifier',
 'AVProductsInstalled',
 'AVProductsEnabled',
 'Processor',
 'IsProtected',
 'SmartScreen',
 'Census_ProcessorCoreCount',
 'Census_TotalPhysicalRAM',
 'Census_PowerPlatformRoleName',
 'Census_OSVersion',
 'Census_OSArchitecture',
 'Census_OSBranch',
 'Census_IsTouchEnabled',
 'Wdft_IsGamer',
 'EngineVersion_factor',
 'AvSigVersion_factor']


cols = list(train.columns)
cols.remove('MachineIdentifier')
cols.remove('HasDetections')
print(cols)
print('MachineIdentifier' in cols)

cols_comb = combinations(cols, 3)

total = comb(len(cols), 3)

df_columns = ['colA', 'colB', 'colC', 'corr_score']

important_combs = pd.DataFrame(columns=df_columns)


for i, com in enumerate(cols_comb):
    msg = "{}/{} combinations processed ".format(i, total)
    logger.info(msg)

    pokus = train.groupby(list(com))['OsBuild'].transform('count') / train.shape[0]
    score = abs(train['HasDetections'].corr(pokus))
    if score > 0.11:
        logger.info('found {} with score {:6f}'.format(com, score))
        df = pd.DataFrame([[com[0], com[1], com[2], score]], columns=df_columns)
        important_combs = important_combs.append(df,  ignore_index=True) 



important_combs.to_csv('../input/combinations_corr_count_3cols.csv')



