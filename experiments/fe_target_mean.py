# coding: utf-8
import gc
import pickle
import numpy as np
import pandas as pd
from itertools import combinations
from tqdm import tqdm

import utils
import conversions


train = pd.read_pickle('../input/train.pkl')
print("TRAIN LOADED")
test = pd.read_pickle('../input/test.pkl')
print("TEST LOADED")

# merge both datasets

target = 'HasDetections'

train_new = train[['HasDetections', 'MachineIdentifier']]

cols = [
    'EngineVersion',
    'AppVersion',
    'AvSigVersion',
    'AVProductStatesIdentifier',
    'AVProductsInstalled',
    'SmartScreen',
    'Census_OEMModelIdentifier',
    'Census_ProcessorModelIdentifier',
    'Census_PrimaryDiskTotalCapacity',
    'Census_TotalPhysicalRAM',
    'Census_InternalPrimaryDiagonalDisplaySizeInInches',
    'Census_FirmwareVersionIdentifier'
]

train_rows = train.shape[0]

for col in cols:
    new_feature = 'fe_{}_target_mean_enc'.format(col)
    groups_sum = train.groupby(col)[target].transform('sum')
    nr_groups = train.groupby(col)[target].transform('count')
    train_new[new_feature] = (groups_sum - train[target]) / (nr_groups - 1)
    train_new[new_feature].fillna(train_new[new_feature].mean(), inplace=True)
    test_new[new_feature] = test[col].map(train_new[new_feature])
    test_new[new_feature].fillna(test_new[new_feature].mean(), inplace=True)

train_new = utils.reduce_mem_usage(train_new)
test_new = utils.reduce_mem_usage(test_new)

train_new.to_pickle('../input/train_target_mean.pkl')
test_new.to_pickle('../input/test_target_mean.pkl')

