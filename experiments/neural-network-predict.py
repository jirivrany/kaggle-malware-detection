
# IMPORT LIBRARIES
import pandas as pd
import numpy as np
import math
import os
import gc

import os
os.environ['CUDA_VISIBLE_DEVICES']="0"


from keras import callbacks
from sklearn.metrics import roc_auc_score

from sklearn.model_selection import train_test_split
from keras.models import Sequential
from keras.layers import Dense, Dropout, BatchNormalization, Activation
from keras.callbacks import LearningRateScheduler
from keras.optimizers import Adam
from keras.utils import multi_gpu_model



# LOAD BEST SAVED NET
from keras.models import load_model
model_save_name = "../models/bestNet.h5"
model = load_model(model_save_name)

print(model)

pred = np.zeros((7853253, 1))
id = 1
chunksize = 2000000
for df_test in pd.read_csv('../input/test.csv',
                           chunksize=chunksize, usecols=list(utils.DTYPES.keys())[0:-1], dtype=utils.DTYPES):
    print('Loaded', len(df_test), 'rows of TEST.CSV!')
    # ENCODE TEST
    cols = []
    for x in FE:
        cols += encode_FE(df_test, x, verbose=0)
    for x in range(len(OHE)):
        cols += encode_OHE_test(df_test, OHE[x], dd[x])
    # PREDICT TEST
    end = (id) * chunksize
    if end > 7853253:
        end = 7853253
    pred[(id - 1) * chunksize:end] = model.predict_proba(df_test[cols])
    print('  encoded and predicted part', id)
    id += 1


# In[ ]:


# SUBMIT TO KAGGLE
df_test = pd.read_csv('../input/test.csv', usecols=['MachineIdentifier'])
df_test['HasDetections'] = pred
df_test.to_csv('../output/sub-nn-01.csv', index=False)
