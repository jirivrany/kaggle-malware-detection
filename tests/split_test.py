# coding: utf-8
import gc
import pickle
import numpy as np
import pandas as pd
from itertools import combinations
from tqdm import tqdm

import utils
import conversions


train = pd.read_pickle('../input/train_split.pkl')
print("TRAIN LOADED")
test = pd.read_pickle('../input/test_split.pkl')
print("TEST LOADED")
valid = pd.read_pickle('../input/valid_split.pkl')
print("VALID LOADED")

# merge both datasets

target_train = train['HasDetections']
del train['HasDetections']

target_train.to_pickle('../input/target_train.pkl')
print("Target saved")

target_valid = valid['HasDetections']
del valid['HasDetections']
target_valid.to_pickle('../input/target_valid.pkl')

print("TARGET TRAIN", target_train.shape)
print("TRAIN", train.shape)
print("TARGET VALID", target_valid.shape)
print("VALID", valid.shape)



train_rows = train.shape[0]
valid_rows = valid.shape[0]

df_full = pd.concat([train, valid, test])

print("MERGED") 
del(train)
del(test)
del(valid)
gc.collect()


# split back and save
train = df_full[:train_rows]
valid = df_full[train_rows:train_rows+valid_rows]
test = df_full[train_rows+valid_rows:]

print("TARGET TRAIN", target_train.shape)
print("TRAIN", train.shape)
print("TARGET VALID", target_valid.shape)
print("VALID", valid.shape)